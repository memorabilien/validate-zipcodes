
import babel , { getBabelOutputPlugin } from "@rollup/plugin-babel";
import commonjs from "@rollup/plugin-commonjs";
import  resolve  from "@rollup/plugin-node-resolve"

const devMode = (process.env.NODE_ENV === "development"); //set NODE_ENV=development ; set NODE_ENV=production
console.log(`${ devMode ? 'development' : 'production' } mode bundle`);


const config =  [
    {
        input: './src/valZip.js',
        output:
            {
                // dir: "dist",
                file: "./dist/val-zip.js",
                format: 'es',
                //globals:{},// umd, iife only
                name: 'valZip', // umd, iife only
                //assetFileNames:"", 
                banner: '/*!\n   MIT License \n   Copyright (c) 2022 Leonhard Maier\n*/',
                footer: "",
                //chunkFileNames: "",
                compact: false,
                dynamicImportInCjs: true,
                //entryFileNames:"",
                extend: true,
                externalImportAssertions: true,
                generatedCode: "es5",
                hoistTransitiveImports: true,
                inlineDynamicImports: false,
                interop: "default",
                // intro:{},
                // outro:{},
                // manualChunks:{},
                minifyInternalExports: true,
                // paths:"",
                preserveModules: false,
                //preserveModulesRoot:"",
                sourcemap: false,
                //sourcemapBaseUrl: "",
                sourcemapExcludeSources: false,
                //sourcemapFile: "",
                //sourcemapPathTransform: ()=>{},
                validate: false,
                esModule: true,
                exports: "default",
                externalLiveBindings: true,
                freeze: true,
                indent: true,
                noConflict: false,
                sanitizeFileName: true,
                strict: true,
                systemNullSetters: true,
            },
           
        preserveEntrySignatures: "exports-only",
        strictDeprecations: false,
        preserveSymlinks: false,
        shimMissingExports: false,
        treeshake: {
            annotations: true,
            correctVarValueBeforeDeclaration: false,
            //manualPureFunctions:"",
            moduleSideEffects: true,
            //preset: "",
            propertyReadSideEffects: true,
            tryCatchDeoptimization: true,
            unknownGlobalSideEffects: true,
        },
        plugins:[
            commonjs({
                strictRequires: true, 
                dynamicRequireTargets:[],
                dynamicRequireRoot: process.cwd(),
                exclude: null,
                extensions: ['.js'],
                ignoreGlobal: false,
                sourceMap: false,
                transformMixedEsModules: true,
                ignore: [],
                ignoreTryCatch: true,
                ignoreDynamicRequires: false,
                esmExternals: true,
                defaultIsModuleExports: "auto",
                requireReturnsDefault: true,
            }),
                getBabelOutputPlugin({ presets: ['@babel/preset-env'] }),
                resolve({
                    // exportConditions: ['default', 'module', 'import'],
                    // browser: false,
                    // moduleDirectories: ['node_modules'],
                    // modulePaths:[],
                    // dedupe:[],
                    extensions:['.mjs', '.js','.cjs' ,'.json', '.node'],
                    // jail:"/",
                    // mainFields:['module', 'main'],
                    // preferBuiltins: true,
                    modulesOnly: true,
                    // resolveOnly: null,
                    // rootDir: process.cwd()
                }),
            ]
    },
    {
        input: './src/valZip.js',
        output:
        {
            // dir: "dist",
            file: "./dist/val-zip.umd.js",
            format: 'esm',
            //globals:{},// umd, iife only
            name: 'val-zip', // umd, iife only
            //assetFileNames:"", 
            banner: '/*!\n   MIT License \n   Copyright (c) 2022 Leonhard Maier\n*/',
            footer: "",
            //chunkFileNames: "",
            compact: false,
            dynamicImportInCjs: true,
            //entryFileNames:"",
            extend: true,
            externalImportAssertions: true,
            generatedCode: "es5",
            hoistTransitiveImports: true,
            inlineDynamicImports: false,
            interop: "auto",
            // intro:{},
            // outro:{},
            // manualChunks:{},
            minifyInternalExports: true,
            // paths:"",
            preserveModules: false,
            //preserveModulesRoot:"",
            sourcemap: false,
            //sourcemapBaseUrl: "",
            sourcemapExcludeSources: false,
            //sourcemapFile: "",
            //sourcemapPathTransform: ()=>{},
            validate: false,
            esModule: "if-default-prop",
            exports: "auto",
            externalLiveBindings: true,
            freeze: true,
            indent: true,
            noConflict: true,
            sanitizeFileName: true,
            strict: true,
            systemNullSetters: true,
        },
        preserveEntrySignatures: "exports-only",
        strictDeprecations: false,
        preserveSymlinks: false,
        shimMissingExports: false,
        treeshake: {
            annotations: true,
            correctVarValueBeforeDeclaration: false,
            //manualPureFunctions:"",
            moduleSideEffects: true,
            //preset: "",
            propertyReadSideEffects: true,
            tryCatchDeoptimization: true,
            unknownGlobalSideEffects: true,
        },
        plugins:[
            commonjs({
                strictRequires: true, 
                dynamicRequireTargets:[],
                dynamicRequireRoot: process.cwd(),
                exclude: null,
                extensions: ['.js'],
                ignoreGlobal: false,
                sourceMap: false,
                transformMixedEsModules: false,
                ignore: [],
                ignoreTryCatch: true,
                ignoreDynamicRequires: false,
                esmExternals: false,
                defaultIsModuleExports: "auto",
                requireReturnsDefault: false,
            }),
                getBabelOutputPlugin({ presets: [['@babel/env',{modules: "umd"}]] }),
                resolve({
                    // exportConditions: ['default', 'module', 'import'],
                    browser: true,
                    // moduleDirectories: ['node_modules'],
                    // modulePaths:[],
                    // dedupe:[],
                    extensions:['.mjs', '.js','.cjs' ,'.json', '.node'],
                    // jail:"/",
                    mainFields:['module', 'main','browser', 'jsnext:main'],
                    preferBuiltins: false,
                    // modulesOnly: false,
                    // resolveOnly: null,
                    // rootDir: process.cwd()
                }),
            ]
    },
    {
        input: './src/valZip.js',
        output:
        {
            // dir: "dist",
            file: "./dist/val-zip.cjs",
            format: 'cjs',
            //globals:{},// umd, iife only
            //name: 'valZip', // umd, iife only
            //assetFileNames:"", 
            banner: '/*!\n   MIT License \n   Copyright (c) 2022 Leonhard Maier\n*/',
            footer: "",
            //chunkFileNames: "",
            compact: false,
            dynamicImportInCjs: false,
            //entryFileNames:"",
            extend: false,
            externalImportAssertions: true,
            generatedCode: {
                constBindings: true,
            },
            hoistTransitiveImports: true,
            inlineDynamicImports: false,
            interop: "defaultOnly",
            // intro:{},
            // outro:{},
            // manualChunks:{},
            minifyInternalExports: true,
            // paths:"",
            preserveModules: false,
            //preserveModulesRoot:"",
            sourcemap: false,
            //sourcemapBaseUrl: "",
            sourcemapExcludeSources: false,
            //sourcemapFile: "",
            //sourcemapPathTransform: ()=>{},
            validate: false,
            esModule: "if-default-prop",
            exports: "auto",
            externalLiveBindings: false,
            freeze: false,
            indent: true,
            noConflict: false,
            sanitizeFileName: true,
            strict: true,
            systemNullSetters: true,
        },
            
        preserveEntrySignatures: "exports-only",
        strictDeprecations: false,
        preserveSymlinks: false,
        shimMissingExports: false,
        treeshake: {
            annotations: true,
            correctVarValueBeforeDeclaration: false,
            //manualPureFunctions:"",
            moduleSideEffects: true,
            //preset: "",
            propertyReadSideEffects: true,
            tryCatchDeoptimization: true,
            unknownGlobalSideEffects: true,
        },
        plugins:[
            commonjs({
                strictRequires: true, 
                dynamicRequireTargets:[],
                dynamicRequireRoot: process.cwd(),
                exclude: null,
                extensions: ['.js'],
                ignoreGlobal: false,
                sourceMap: false,
                transformMixedEsModules: false,
                ignore: [],
                ignoreTryCatch: true,
                ignoreDynamicRequires: false,
                esmExternals: false,
                defaultIsModuleExports: "auto",
                requireReturnsDefault: false,
            }),
            // babel({
                //     exclude: 'node_modules/**',
                //    //include:"",
                //    //filter: ,
                //    extensions: ['.js', '.jsx', '.es6', '.es', '.mjs'],
                //    babelHelpers: 'bundled',
                //    skipPreflightCheck: false,
                // }),
                getBabelOutputPlugin({ presets: ['@babel/preset-env'] }),
                // resolve({
                //     exportConditions: ['default', 'module', 'import'],
                //     browser: false,
                //     moduleDirectories: ['node_modules'],
                //     modulePaths:[],
                //     dedupe:[],
                //     extensions:['.mjs', '.js','.cjs' ,'.json', '.node'],
                //     jail:"/",
                //     mainFields:['module', 'main'],
                //     preferBuiltins: true,
                //     modulesOnly: false,
                //     resolveOnly: null,
                //     rootDir: process.cwd()
                // }),
            ]
    }
]
export default config;


